#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

mktmpdir() {
  dir=$(mktemp -t R-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

install_r_package() {
  package_url="$1"
  HOME="$BUILD_DIR" $VENDORED_R/bin/R CMD INSTALL $package_url 2>&1 | indent

  if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to install $package_url package"
    exit 1
  fi
}

# clean up leaking environment
unset GIT_DIR

# config
R_VERSION="2.15.1"
S3_BUCKET="heroku-buildpack-r"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# echo "BUILD_DIR => $BUILD_DIR"
# echo "CACHE_DIR => $CACHE_DIR"
# echo "LP_DIR => $LP_DIR"

CACHE_STORE_DIR="$CACHE_DIR/r_packages/$R_VERSION"
CACHE_TARGET_DIR="$BUILD_DIR/r_packages"

# s3 packages
R_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/R-${R_VERSION}-binaries.tgz"

# vendor directories
VENDORED_R="$(mktmpdir R)"

# download and unpack binaries
echo "-----> Fetching R binaries"
mkdir -p $VENDORED_R  && curl $R_PACKAGE -s -o -  | tar xzf - -C $VENDORED_R

# echo ""
# ls -alhR $VENDORED_R | indent
# echo ""

# vendor R into the slug
PATH="$BUILD_DIR/bin:$PATH"
echo "-----> Vendoring R $R_VERSION"

mkdir -p "$BUILD_DIR/bin"
cp "$VENDORED_R/bin/R" "$BUILD_DIR/bin/R"

# setting up paths for building
PATH="$VENDORED_R/bin:$PATH"
INCLUDE_PATH="$VENDORED_R/lib/R/include"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"

# unpack existing cache
if [ -d $CACHE_STORE_DIR ]; then

  # generate a place to put packages
  TEMP_R_PACKAGES_DIR=$(mktmpdir r_packages)

  # move existing packages out of the way
  if [ -d $CACHE_TARGET_DIR ]; then
    mv $CACHE_TARGET_DIR $TEMP_R_PACKAGES_DIR/
  fi

  # copy the cached packages in
  mkdir -p $CACHE_TARGET_DIR
  cp -R $CACHE_STORE_DIR/* $CACHE_TARGET_DIR/

  # move existing packages back into place
  if [ -d $TEMP_R_PACKAGES_DIR/r_packages ]; then
    cp -R $TEMP_R_PACKAGES_DIR/r_packages/* $CACHE_TARGET_DIR/
  fi

fi

# install dependencies from CRAN
echo "-----> Installing dependencies from CRAN"

cd $BUILD_DIR

  # TODO: read the r_packages file and install each one

  echo "...TODO..." | indent
  echo "...TODO..." | indent
  echo "...TODO..." | indent
  echo "...TODO..." | indent

  #
  # e.g. to install the "neldermead" package:
  #  install_r_package('http://cran.r-project.org/src/contrib/neldermead_1.0-7.tar.gz')
  #

echo "Dependencies installed" | indent

# repack cache with new assets
if [ -d $CACHE_TARGET_DIR ]; then
  rm -rf $CACHE_STORE_DIR
  mkdir -p $(dirname $CACHE_STORE_DIR)
  cp -a $CACHE_TARGET_DIR $CACHE_STORE_DIR
fi
